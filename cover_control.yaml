blueprint:
  name: cover_control
  description: close cover when sun is shining and open when stops
  domain: automation
  source_url: https://github.com/alex92ch/cover_control/cover_control.yaml
  input:
    cover_entity:
      name: cover
      selector:
        # target:
        entity:
          domain: cover
    sun_position_start:
      name: sun azimuth position start
      description: Sun azimuth. when sun is below this value, shutter could be triggered
      default: 89
      selector:
        number:
          min: 0
          max: 360
          unit_of_measurement: 째
    sun_position_end:
      name: sun azimuth position end
      description: Sun azimuth. when sun is over this value, shutter could be triggered
      default: 200
      selector:
        number:
          min: 0
          max: 360
          unit_of_measurement: 째
    sun_elevation_start:
      name: sun elevation to start
      description: Sun elevation. when sun is over this value, shutter could be triggered
      default: 32
      selector:
        number:
          min: -100
          max: 360
          unit_of_measurement: 째
    temperature:
      name: Temperature service
      selector:
        entity:
          domain: weather
    weather:
      name: Weather service
      selector:
        entity:
          domain: sensor
    cloudiness_open:
      name: Cloudiness open
      description: Percentage of cloudiness above which the shutters will open
      default: 70
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
    cloudiness_close:
      name: Cloudiness close
      description: Percentage of cloudiness below which the shutters will close
      default: 30
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
    outdoor_temp:
      name: Outdoor temperature
      description: Temperature above which the shutters will close
      default: 16
      selector:
        number:
          min: 0
          max: 30
          unit_of_measurement: 째C

variables:
  cover_e: !input cover_entity
  cloudiness_open_threshold: !input cloudiness_open
  cloudiness_close_threshold: !input cloudiness_close
  var_e: "{{ 'var.' + cover_e[6:] }}"
  protection_begin: !input sun_position_start
  protection_end: !input sun_position_end
  elevation_begin: !input sun_elevation_start
  outdoor_temp: !input outdoor_temp
  temperature_service: !input temperature
  weather_service: !input weather

mode: parallel

trigger:
  - platform: time_pattern
    minutes: "/5"

condition:
  condition: sun
  before: sunset
  after: sunrise

action:
  - choose:
      ##########################################################
      # close cover
      ##########################################################
      - conditions:
          - condition: template
            value_template: "{{- is_state('input_boolean.cover_manage_cover_with_sun', 'on') -}}"
          - condition: template
            value_template: >-
              {% set cloudiness_percentage = states(weather_service) | regex_replace('^.*?(\d+)%.*$', '\1') | int %}
              {{ cloudiness_percentage < cloudiness_close_threshold }}
          - condition: template
            value_template: "{{ states(var_e) != '1' }}"
          - condition: template
            value_template: "{{ state_attr('sun.sun', 'azimuth') > protection_begin and state_attr('sun.sun', 'azimuth') < protection_end and state_attr('sun.sun', 'elevation') > elevation_begin }}"
          - condition: template
            value_template: "{{ state_attr(temperature_service, 'temperature') > outdoor_temp }}"
        sequence:
          - data_template:
              entity_id: "{{ cover_e }}"
            service: cover.close_cover
          - condition: template
            value_template: "{{ states(cover_e) == 'closed' }}"
          - data:
              entity_id: "{{ var_e }}"
              value: 1
            service: var.set
          - condition: template
            value_template: "{{ states(cover_e) == 'closed' }}"
          - service: automation.trigger
            metadata: {}
            data:
              skip_condition: true
            target:
              entity_id: automation.neue_automatisierung_3

      ##########################################################
      # open cover
      ##########################################################
      - conditions:
          - condition: template
            value_template: "{{- is_state('input_boolean.cover_manage_cover_with_sun', 'on') -}}"
          - condition: template
            value_template: >-
              {% set cloudiness_percentage = states(weather_service) | regex_replace('^.*?(\d+)%.*$', '\1') | int %}
              {{ cloudiness_percentage < cloudiness_open_threshold }}
          - condition: template
            value_template: "{{ states(var_e) == '1' }}"
          - condition: template
            value_template: "{{ (state_attr('sun.sun', 'azimuth') < protection_begin or state_attr('sun.sun', 'azimuth') > protection_end or  state_attr('sun.sun', 'elevation') < elevation_begin) }}"

        sequence:
          - data_template:
              entity_id: "{{ cover_e }}"
            service: cover.open_cover
          - condition: template
            value_template: "{{ states(cover_e) == 'open' }}"
          - data:
              entity_id: "{{ var_e }}"
              value: 0
            service: var.set
